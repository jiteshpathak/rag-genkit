{"traceId":"6fb64ed91bde5fc50562fce2b858a94d","spans":{"15df442feb73097c":{"spanId":"15df442feb73097c","traceId":"6fb64ed91bde5fc50562fce2b858a94d","parentSpanId":"42fc4bff40ebaf74","startTime":1752354792733,"endTime":1752354794443.705,"attributes":{"genkit:type":"action","genkit:metadata:subtype":"embedder","genkit:name":"googleai/text-embedding-004","genkit:path":"/{rag,t:flow}/{astradb/rag_app,t:action}/{googleai/text-embedding-004,t:action,s:embedder}","genkit:input":"{\"input\":[{\"content\":[{\"text\":\"https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}]}],\"options\":{}}","genkit:output":"{\"embeddings\":[{\"embedding\":[0.03693279,-0.012074856,-0.045525666,-0.011064688,0.029258808,0.040103517,0.07900505,0.0035601151,-0.00037915097,-0.0127088595,-0.05479883,0.091842376,0.036576375,0.03169478,-0.019391984,-0.015392046,0.013524789,0.02198033,-0.06010181,-0.023309594,-0.0062250686,-0.025785483,-0.034658663,-0.0046641957,0.04939835,0.021065786,0.014721813,0.008906669,0.01598962,-0.02462971,0.033516265,0.0009248128,0.050579235,-0.044005446,-0.05054492,0.01312064,-0.012333993,0.049263194,-0.023293862,-0.055794127,0.009925455,0.014084199,0.02839136,0.053160977,0.041568246,0.016196217,-0.03179637,0.020001043,-0.055036217,0.0035687874,0.043212593,-0.036360063,0.020162534,-0.024348527,-0.02291134,0.009907026,0.0067309337,0.0017615294,0.07022899,-0.044132695,0.054052494,0.018356439,0.023143103,0.0012847468,-0.018851086,-0.03506906,0.023429444,0.05178972,-0.013380006,0.05798051,0.018019253,0.011806092,-0.038858317,0.05181977,0.024470005,0.049083196,-0.06335979,0.03475049,-0.012587041,0.023309063,-0.015649714,0.012291916,0.019570934,0.022694739,-0.006255086,-0.045593254,-0.004072408,-0.02245758,-0.013149447,-0.016127763,0.058435675,-0.008185851,-0.003742596,0.005962969,0.034461945,-0.03751672,-0.05811056,-0.0564129,0.031703413,0.04091537,0.0032241736,0.0050476603,0.04474573,0.01624792,0.0018933215,0.017337218,-0.0033953846,0.0015699237,-0.03140315,-0.011510243,0.032751698,0.008472737,-0.020135147,-0.024269909,-0.0420932,0.031647652,-0.039424628,0.03956954,-0.021346068,-0.034228753,0.0027520424,0.016177703,-0.0065259775,0.041875396,0.12019757,0.015800023,0.011518564,-0.0226436,-0.040026564,0.0022482527,0.065473214,-0.029397825,0.040980004,0.039393883,0.00085486023,-0.029626887,0.03423465,0.008277774,0.048482616,-0.007641771,-0.025104657,0.0011987662,-0.07301963,-0.023212204,-0.038990118,-0.030693837,0.035568308,0.06892502,0.047645815,0.019621553,-0.0279338,0.0052077333,-0.04549242,-0.03831623,-0.0136447735,-0.033211082,0.046105586,-0.08079786,0.026300754,-0.022406608,0.014012041,-0.056005433,-0.0029083192,0.03643313,-0.025124412,-0.081747375,0.018371345,-0.025839267,0.006949174,0.03867725,-0.023100903,-0.012184098,-0.0373958,0.028172374,0.0059601897,0.0045576133,-0.050652172,-0.066957496,-0.021679265,-0.020135036,0.0920624,0.030965982,-0.04137624,-0.10062114,0.0056016645,0.0142408125,-0.052804325,0.057667803,0.03800926,0.037539136,-0.041577265,0.0025301198,0.036670957,-0.00052821875,-0.03142813,-0.00090253167,0.035371985,-0.044611987,-0.031312965,-0.01203531,0.03878485,-0.020951096,0.0010065536,-0.040910885,-0.06359131,-0.040028155,0.02425138,-0.020934751,0.011486968,0.08491804,-0.0045264307,-0.03400645,-0.06620951,-0.04090769,0.025384357,0.01740567,0.04694167,0.054245178,0.015616835,0.015061372,0.057462733,0.010748994,-0.023308305,0.0073080445,0.029078338,0.03765648,-0.04548026,-0.03293357,-0.031606026,-0.033706572,-0.0046241228,0.028990615,0.034501474,0.06937689,0.0028964223,0.033791196,0.04070537,-0.05495854,0.017694693,0.040960666,-0.0073247193,0.03391605,0.02651459,-0.022367742,0.04064544,-0.015433181,-0.00807941,0.06880282,0.03933752,-0.01501125,-0.051400725,0.00434034,-0.0393407,-0.0068657016,-0.02396111,-0.018451715,0.020649068,0.037957683,-0.00050861016,-0.046899915,0.00014928414,-0.03924104,-0.023901276,-0.06936664,-0.029668558,-0.05745309,-0.030001998,0.016883295,0.033638712,-0.006196171,0.0017404802,-0.020244313,-0.045893624,-0.009055703,-0.048117444,0.032171696,-0.022348015,0.031080967,0.00010932699,-0.013086287,-0.0017243597,-0.03891674,0.025320081,-0.00021888,0.05397729,-0.040464368,-0.032394927,0.040711965,0.013342572,-0.028056644,0.049915582,0.014107578,-0.016908176,-0.07983877,0.026188927,0.016880395,0.04824873,0.049281612,0.04733802,0.010768726,0.04222335,0.06984167,0.006844964,0.06976266,-0.038748335,0.009521241,0.026312243,-0.0043489994,-0.02207455,-0.005606933,0.044780295,0.040655583,-0.010224647,-0.04374879,-0.03194605,0.038119458,-0.05337344,-0.044504322,-0.0003919688,-0.006744327,-0.018243382,0.012724038,-0.0026475654,0.027966123,0.040725395,0.007366643,-0.009504211,-0.020528104,-0.006409953,0.024342936,0.037011098,-0.03503362,-0.04157533,-0.025369206,-0.02081426,0.05137884,0.03751193,0.02326421,0.06439687,-0.0054099928,0.03954834,0.056032825,0.06165361,0.029064074,0.00822065,0.020208767,0.0051957113,-0.015072088,0.04273666,0.025662696,-0.0014254948,0.017447542,0.019413635,-0.023934938,-0.037177492,0.014410099,-0.0005401407,-0.011495833,0.0039530564,-0.023607234,-0.042832498,-0.004766347,0.0021663993,0.024275385,-0.046143785,-0.032700386,0.052209944,0.03200079,-0.032875378,0.0154190045,-0.04926098,0.004070582,0.026829286,-0.000089990834,0.06984627,-0.018351803,-0.01325022,0.035352543,0.01519647,-0.037948262,0.051251855,-0.023354992,0.0024091236,0.00025032114,-0.010313596,0.061358873,0.026429066,-0.0536372,0.048505105,-0.056764,-0.013434632,0.042283874,0.03652861,0.030155974,0.075390145,0.03459193,-0.05394432,0.044902653,0.06454061,0.0030305581,-0.036394484,-0.03358056,-0.04243353,-0.084591344,0.006510361,-0.009438311,0.11165045,0.05712273,-0.03524757,0.055391658,-0.01048509,-0.042858373,-0.002459328,0.059483208,0.008308309,-0.05883067,0.03273246,-0.04808874,0.029790524,0.0077851587,-0.018107988,0.023440873,0.009450512,-0.025016284,-0.017872564,-0.057627577,-0.024578514,0.039673407,0.0046814233,-0.021414883,0.048683923,0.0023342564,-0.017775916,0.040949147,0.015255008,0.06391104,-0.03625187,-0.046366073,0.044340312,0.0044746734,0.036289915,0.020743076,0.039469372,0.08710306,-0.022099564,0.085070945,0.039401405,0.06152734,0.026012292,-0.039785996,0.017781163,0.046778616,0.012005414,-0.023620736,-0.02912866,-0.013605345,-0.024641374,0.032101408,-0.005123651,-0.037958853,-0.032883696,-0.019936351,0.054336224,0.030825876,-0.0490319,-0.050731093,-0.06548859,0.023669219,-0.018567313,0.026274994,0.0053791306,0.018967465,0.01756582,0.03649135,-0.04167288,0.050353043,0.03077061,0.017244546,-0.023200499,-0.062833995,0.03881225,0.043215796,-0.061971415,0.064252675,0.007457804,-0.024832299,0.046669934,-0.0042131618,0.0012041301,-0.05544964,-0.041737285,-0.037651926,-0.033147935,-0.049821664,-0.000047650534,0.036257125,0.06656599,-0.014650806,0.02386472,0.038923375,-0.014388646,0.0139627345,-0.022907563,0.026149862,-0.04235254,0.050306644,0.015995586,0.008690506,0.06672406,-0.0035877998,0.063448414,-0.033806335,-0.050583053,0.020298721,-0.023536531,0.064445205,-0.021596914,-0.04131707,-0.01515663,0.016527304,0.0036702312,-0.027415691,0.036698747,0.040362477,-0.019853374,-0.008170799,-0.058766723,0.022797037,0.016619528,-0.028572911,-0.02239712,0.0399065,0.032920573,0.02793697,0.027808767,0.02608046,0.020338174,0.04265754,0.024535343,0.02596229,0.02237489,0.00034115746,-0.0018945092,-0.001025664,0.0047752904,-0.008906966,-0.012220573,0.025920155,-0.0067262347,0.044224527,-0.021191627,0.009594612,-0.04557736,0.009760145,0.048250616,0.0068050195,-0.065391675,0.013442902,-0.0104204295,-0.004985155,-0.02680069,-0.032711037,-0.027599975,0.010802744,-0.000119024255,0.03780914,-0.05979319,0.066572756,-0.019564984,0.01838226,-0.021567356,-0.07433621,0.008289311,-0.00032834485,-0.024123738,-0.03128564,-0.013182145,0.0015248425,0.009455065,-0.021379946,-0.027540505,-0.0052370215,0.0616158,-0.01049332,-0.040305562,-0.014893106,-0.00093137234,0.04683363,-0.027486423,-0.03868263,-0.015078371,-0.0020305943,-0.0058767125,0.0070045544,0.001674422,0.05587879,-0.05469724,-0.019682076,0.039556906,0.01222202,-0.0027631477,-0.02380207,0.07370622,0.021943165,0.012456585,-0.017613538,-0.05288894,0.006443396,-0.0131061915,-0.0021188366,0.0048283697,0.021635603,0.0032494906,-0.022255141,-0.0941476,-0.0074244197,-0.026725743,-0.0038036536,-0.021235533,0.036182813,0.014522604,0.049143203,-0.018825084,-0.027366709,0.042760257,-0.034245152,-0.013396822,0.019247055,0.060960595,-0.036840342,-0.020664223,-0.0046940567,0.019309642,-0.04129823,0.017958127,-0.023272505,0.054615367,0.016593605,0.0195968,0.008511551,-0.023749847,0.036679007,0.03635279,-0.056936417,-0.028590336,0.044489045,0.013115756,-0.015626824,0.025777347,0.04313615,-0.0034163354,0.061265983,-0.02859314,0.029979158,-0.084488474,-0.014891986,-0.07226625,0.0018610439,0.041717414,-0.04302557,-0.06232811,-0.016886719,-0.028642453,0.010527201,-0.03418127,-0.015938053,0.017919388,0.044151954,-0.012278868,-0.01332792,0.04177558,-0.00042866752,0.037070137,0.024468744,-0.006251355,-0.0306014,0.031785127,0.023118615,-0.010124597,0.011049525,0.014863251,-0.029968314,0.020489156,-0.0160772,0.03787819,-0.012188753,0.019002594,-0.06810051,0.01149777,-0.034778427,0.022694802,0.026413143,-0.033379927,0.015281304,-0.011232933,0.029870087,-0.04352552,0.041798025,-0.08351504,-0.08221773,0.050929,0.025515465,-0.06179808,-0.014472446,0.029025204,0.01703439,0.048204515,0.03684929,-0.087462984,-0.026680015,-0.07739762,0.03291296,0.008050451,0.02259125,-0.0050410344,0.03289783,-0.025862899,0.049343616,0.044715844,-0.02493863,0.04830844,-0.04535712,0.103577554,-0.013782172,-0.009689102,-0.010523914,-0.028528577,0.007858504,-0.033899628,-0.021922035,-0.0013242639,-0.03236345,-0.043776486,0.06621505,0.0008752935,-0.034576975,-0.02050385,0.018593336,-0.059261054,0.028582215,0.026141815,-0.034047417,-0.01565987,-0.011176633,0.043540247,0.0050758207,-0.054153938,-0.032619286,-0.057476837,-0.025434488,-0.065630615,0.0012183137,-0.009716421,0.015666096,0.016444823,-0.029788174,-0.00013141563,-0.04653391,0.011340081,-0.00015001436,-0.038638767,0.08816302,-0.009445518,0.06315723,-0.013992835,-0.03308391,0.07710412,0.042604923]}]}","genkit:state":"success"},"displayName":"googleai/text-embedding-004","links":[],"instrumentationLibrary":{"name":"genkit-tracer","version":"v1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"42fc4bff40ebaf74":{"spanId":"42fc4bff40ebaf74","traceId":"6fb64ed91bde5fc50562fce2b858a94d","parentSpanId":"95d8b54396c17ecb","startTime":1752354792733,"endTime":1752354794730.9204,"attributes":{"genkit:type":"action","genkit:metadata:subtype":"retriever","genkit:name":"astradb/rag_app","genkit:path":"/{rag,t:flow}/{astradb/rag_app,t:action,s:retriever}","genkit:input":"{\"query\":{\"content\":[{\"text\":\"https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}]},\"options\":{\"k\":3}}","genkit:output":"{\"documents\":[{\"content\":[{\"text\":\" flows, traces, and evaluations. By using Genkit, developers can efficiently create applications that leverage the power of generative AI.\\nHow do I get started with building a RAG application using Genkit and Astra DB?\\nTo build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB and then install Genkit and related dependencies into your Node.js application. Once you've configured Genkit with your Astra DB credentials, you can start creating flows.\\nWhat does building the RAG application involve?\\nBuilding the RAG application involves creating a collection in Astra DB to store vectors, and setting up flows in Genkit to ingest data, and to generate responses based on context retrieved from the database. You can test these flows out using the Genkit UI.\\nDataStax AI Platform:The Fastest Way to Build and Deploy AI AppsTry For Free\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\"Today we announced the release of a plugin for Firebase's Genkit framework for building generative AI applications. Genkit is a powerful framework that provides the primitives for building production-quality GenAI applications. From easy access to models, prompts, indexers, and retrievers, to more advanced features like flows, traces, and evals, its power lies in making it easy to do the right thing while building GenAI applications.\\nIn this post, we'll take a look at how to use the Astra DB plugin for Genkit to build a retrieval-augmented generation application with Genkit.Building a RAG application\\nLet's build a RAG application from scratch and see how straightforward it can be with Genkit and Astra DB. First, you'll need a Gemini API key, which you can get from Google AI Studio.\\nYou’ll also need an Astra DB database to store your data and vectors; if you don't already have an account you can sign up for a free DataStax account.\\nStart by creating a new Astra DB database; give it a name and choose a cloud and\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\" creates vectors with 768 dimensions (though you can choose fewer), so enter 768 for the number of dimensions and choose \\\"Cosine\\\" for  the similarity metric.Once you've created the collection, you'll need the API endpoint of the database, the collection name and to generate an API token. With those, create a .env file in your application and enter the credentials:\\nAlso in the .env file, enter your API key from AI Studio too:Now we can configure Genkit. In index.ts create the ai object like so:\\nThis sets up Genkit with the Google AI plugin for models and embeddings and the Astra DB plugin, configured with the credentials to access the collection you just created and the vector embedding model text-embedding-004.\\nWe can now access the Astra DB indexer and retriever via the reference functions:The indexer is used to store documents in the collection and the retriever is used to perform vector search to return documents from the collection.\\nIngesting data\\nNow we can ingest some data into Astra DB. For this RAG application,\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}}]}","genkit:state":"success"},"displayName":"astradb/rag_app","links":[],"instrumentationLibrary":{"name":"genkit-tracer","version":"v1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"e3dc84c048d6844d":{"spanId":"e3dc84c048d6844d","traceId":"6fb64ed91bde5fc50562fce2b858a94d","parentSpanId":"0e06b5e18db65ed1","startTime":1752354794735,"endTime":1752354795828.0818,"attributes":{"genkit:type":"action","genkit:metadata:subtype":"model","genkit:name":"googleai/gemini-2.0-flash","genkit:path":"/{rag,t:flow}/{generate,t:util}/{googleai/gemini-2.0-flash,t:action,s:model}","genkit:input":"{\"messages\":[{\"role\":\"user\",\"content\":[{\"text\":\"\\nYou are a helpful AI assistant that can answer questions.\\n\\nUse only the context provided to answer the question.\\nIf you don't know, do not make up an answer.\\n\\nQuestion: https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"},{\"text\":\"\\n\\nUse the following information to complete your task:\\n\\n- [0]:  flows, traces, and evaluations. By using Genkit, developers can efficiently create applications that leverage the power of generative AI.\\nHow do I get started with building a RAG application using Genkit and Astra DB?\\nTo build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB and then install Genkit and related dependencies into your Node.js application. Once you've configured Genkit with your Astra DB credentials, you can start creating flows.\\nWhat does building the RAG application involve?\\nBuilding the RAG application involves creating a collection in Astra DB to store vectors, and setting up flows in Genkit to ingest data, and to generate responses based on context retrieved from the database. You can test these flows out using the Genkit UI.\\nDataStax AI Platform:The Fastest Way to Build and Deploy AI AppsTry For Free\\n- [1]: Today we announced the release of a plugin for Firebase's Genkit framework for building generative AI applications. Genkit is a powerful framework that provides the primitives for building production-quality GenAI applications. From easy access to models, prompts, indexers, and retrievers, to more advanced features like flows, traces, and evals, its power lies in making it easy to do the right thing while building GenAI applications.\\nIn this post, we'll take a look at how to use the Astra DB plugin for Genkit to build a retrieval-augmented generation application with Genkit.Building a RAG application\\nLet's build a RAG application from scratch and see how straightforward it can be with Genkit and Astra DB. First, you'll need a Gemini API key, which you can get from Google AI Studio.\\nYou’ll also need an Astra DB database to store your data and vectors; if you don't already have an account you can sign up for a free DataStax account.\\nStart by creating a new Astra DB database; give it a name and choose a cloud and\\n- [2]:  creates vectors with 768 dimensions (though you can choose fewer), so enter 768 for the number of dimensions and choose \\\"Cosine\\\" for  the similarity metric.Once you've created the collection, you'll need the API endpoint of the database, the collection name and to generate an API token. With those, create a .env file in your application and enter the credentials:\\nAlso in the .env file, enter your API key from AI Studio too:Now we can configure Genkit. In index.ts create the ai object like so:\\nThis sets up Genkit with the Google AI plugin for models and embeddings and the Astra DB plugin, configured with the credentials to access the collection you just created and the vector embedding model text-embedding-004.\\nWe can now access the Astra DB indexer and retriever via the reference functions:The indexer is used to store documents in the collection and the retriever is used to perform vector search to return documents from the collection.\\nIngesting data\\nNow we can ingest some data into Astra DB. For this RAG application,\\n\\n\",\"metadata\":{\"purpose\":\"context\"}}]}],\"config\":{},\"docs\":[{\"content\":[{\"text\":\" flows, traces, and evaluations. By using Genkit, developers can efficiently create applications that leverage the power of generative AI.\\nHow do I get started with building a RAG application using Genkit and Astra DB?\\nTo build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB and then install Genkit and related dependencies into your Node.js application. Once you've configured Genkit with your Astra DB credentials, you can start creating flows.\\nWhat does building the RAG application involve?\\nBuilding the RAG application involves creating a collection in Astra DB to store vectors, and setting up flows in Genkit to ingest data, and to generate responses based on context retrieved from the database. You can test these flows out using the Genkit UI.\\nDataStax AI Platform:The Fastest Way to Build and Deploy AI AppsTry For Free\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\"Today we announced the release of a plugin for Firebase's Genkit framework for building generative AI applications. Genkit is a powerful framework that provides the primitives for building production-quality GenAI applications. From easy access to models, prompts, indexers, and retrievers, to more advanced features like flows, traces, and evals, its power lies in making it easy to do the right thing while building GenAI applications.\\nIn this post, we'll take a look at how to use the Astra DB plugin for Genkit to build a retrieval-augmented generation application with Genkit.Building a RAG application\\nLet's build a RAG application from scratch and see how straightforward it can be with Genkit and Astra DB. First, you'll need a Gemini API key, which you can get from Google AI Studio.\\nYou’ll also need an Astra DB database to store your data and vectors; if you don't already have an account you can sign up for a free DataStax account.\\nStart by creating a new Astra DB database; give it a name and choose a cloud and\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\" creates vectors with 768 dimensions (though you can choose fewer), so enter 768 for the number of dimensions and choose \\\"Cosine\\\" for  the similarity metric.Once you've created the collection, you'll need the API endpoint of the database, the collection name and to generate an API token. With those, create a .env file in your application and enter the credentials:\\nAlso in the .env file, enter your API key from AI Studio too:Now we can configure Genkit. In index.ts create the ai object like so:\\nThis sets up Genkit with the Google AI plugin for models and embeddings and the Astra DB plugin, configured with the credentials to access the collection you just created and the vector embedding model text-embedding-004.\\nWe can now access the Astra DB indexer and retriever via the reference functions:The indexer is used to store documents in the collection and the retriever is used to perform vector search to return documents from the collection.\\nIngesting data\\nNow we can ingest some data into Astra DB. For this RAG application,\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}}],\"tools\":[],\"output\":{}}","genkit:output":"{\"candidates\":[{\"index\":0,\"message\":{\"role\":\"model\",\"content\":[{\"text\":\"To build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB. Then, install Genkit and related dependencies into your Node.js application. After configuring Genkit with your Astra DB credentials, you can start creating flows to ingest data and generate responses based on context retrieved from the database. Remember to obtain a Gemini API key from Google AI Studio.\\n\"}]},\"finishReason\":\"stop\",\"custom\":{}}],\"custom\":{\"candidates\":[{\"content\":{\"parts\":[{\"text\":\"To build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB. Then, install Genkit and related dependencies into your Node.js application. After configuring Genkit with your Astra DB credentials, you can start creating flows to ingest data and generate responses based on context retrieved from the database. Remember to obtain a Gemini API key from Google AI Studio.\\n\"}],\"role\":\"model\"},\"finishReason\":\"STOP\",\"avgLogprobs\":-0.0622206793891059}],\"usageMetadata\":{\"promptTokenCount\":736,\"candidatesTokenCount\":81,\"totalTokenCount\":817,\"promptTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":736}],\"candidatesTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":81}]},\"modelVersion\":\"gemini-2.0-flash\",\"responseId\":\"7M9yaMXPAaHS1PIPiYeK0QU\"},\"usage\":{\"inputCharacters\":3282,\"inputImages\":0,\"inputVideos\":0,\"inputAudioFiles\":0,\"outputCharacters\":421,\"outputImages\":0,\"outputVideos\":0,\"outputAudioFiles\":0,\"inputTokens\":736,\"outputTokens\":81,\"totalTokens\":817},\"latencyMs\":1092.6121000000276}","genkit:state":"success"},"displayName":"googleai/gemini-2.0-flash","links":[],"instrumentationLibrary":{"name":"genkit-tracer","version":"v1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"0e06b5e18db65ed1":{"spanId":"0e06b5e18db65ed1","traceId":"6fb64ed91bde5fc50562fce2b858a94d","parentSpanId":"95d8b54396c17ecb","startTime":1752354794732,"endTime":1752354795829.1558,"attributes":{"genkit:type":"util","genkit:name":"generate","genkit:path":"/{rag,t:flow}/{generate,t:util}","genkit:input":"{\"model\":\"googleai/gemini-2.0-flash\",\"docs\":[{\"content\":[{\"text\":\" flows, traces, and evaluations. By using Genkit, developers can efficiently create applications that leverage the power of generative AI.\\nHow do I get started with building a RAG application using Genkit and Astra DB?\\nTo build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB and then install Genkit and related dependencies into your Node.js application. Once you've configured Genkit with your Astra DB credentials, you can start creating flows.\\nWhat does building the RAG application involve?\\nBuilding the RAG application involves creating a collection in Astra DB to store vectors, and setting up flows in Genkit to ingest data, and to generate responses based on context retrieved from the database. You can test these flows out using the Genkit UI.\\nDataStax AI Platform:The Fastest Way to Build and Deploy AI AppsTry For Free\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\"Today we announced the release of a plugin for Firebase's Genkit framework for building generative AI applications. Genkit is a powerful framework that provides the primitives for building production-quality GenAI applications. From easy access to models, prompts, indexers, and retrievers, to more advanced features like flows, traces, and evals, its power lies in making it easy to do the right thing while building GenAI applications.\\nIn this post, we'll take a look at how to use the Astra DB plugin for Genkit to build a retrieval-augmented generation application with Genkit.Building a RAG application\\nLet's build a RAG application from scratch and see how straightforward it can be with Genkit and Astra DB. First, you'll need a Gemini API key, which you can get from Google AI Studio.\\nYou’ll also need an Astra DB database to store your data and vectors; if you don't already have an account you can sign up for a free DataStax account.\\nStart by creating a new Astra DB database; give it a name and choose a cloud and\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\" creates vectors with 768 dimensions (though you can choose fewer), so enter 768 for the number of dimensions and choose \\\"Cosine\\\" for  the similarity metric.Once you've created the collection, you'll need the API endpoint of the database, the collection name and to generate an API token. With those, create a .env file in your application and enter the credentials:\\nAlso in the .env file, enter your API key from AI Studio too:Now we can configure Genkit. In index.ts create the ai object like so:\\nThis sets up Genkit with the Google AI plugin for models and embeddings and the Astra DB plugin, configured with the credentials to access the collection you just created and the vector embedding model text-embedding-004.\\nWe can now access the Astra DB indexer and retriever via the reference functions:The indexer is used to store documents in the collection and the retriever is used to perform vector search to return documents from the collection.\\nIngesting data\\nNow we can ingest some data into Astra DB. For this RAG application,\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}}],\"messages\":[{\"role\":\"user\",\"content\":[{\"text\":\"\\nYou are a helpful AI assistant that can answer questions.\\n\\nUse only the context provided to answer the question.\\nIf you don't know, do not make up an answer.\\n\\nQuestion: https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}]}],\"config\":{}}","genkit:output":"{\"message\":{\"role\":\"model\",\"content\":[{\"text\":\"To build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB. Then, install Genkit and related dependencies into your Node.js application. After configuring Genkit with your Astra DB credentials, you can start creating flows to ingest data and generate responses based on context retrieved from the database. Remember to obtain a Gemini API key from Google AI Studio.\\n\"}]},\"finishReason\":\"stop\",\"usage\":{\"inputCharacters\":3282,\"inputImages\":0,\"inputVideos\":0,\"inputAudioFiles\":0,\"outputCharacters\":421,\"outputImages\":0,\"outputVideos\":0,\"outputAudioFiles\":0,\"inputTokens\":736,\"outputTokens\":81,\"totalTokens\":817},\"custom\":{\"candidates\":[{\"content\":{\"parts\":[{\"text\":\"To build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB. Then, install Genkit and related dependencies into your Node.js application. After configuring Genkit with your Astra DB credentials, you can start creating flows to ingest data and generate responses based on context retrieved from the database. Remember to obtain a Gemini API key from Google AI Studio.\\n\"}],\"role\":\"model\"},\"finishReason\":\"STOP\",\"avgLogprobs\":-0.0622206793891059}],\"usageMetadata\":{\"promptTokenCount\":736,\"candidatesTokenCount\":81,\"totalTokenCount\":817,\"promptTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":736}],\"candidatesTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":81}]},\"modelVersion\":\"gemini-2.0-flash\",\"responseId\":\"7M9yaMXPAaHS1PIPiYeK0QU\"},\"request\":{\"messages\":[{\"role\":\"user\",\"content\":[{\"text\":\"\\nYou are a helpful AI assistant that can answer questions.\\n\\nUse only the context provided to answer the question.\\nIf you don't know, do not make up an answer.\\n\\nQuestion: https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}]}],\"config\":{},\"docs\":[{\"content\":[{\"text\":\" flows, traces, and evaluations. By using Genkit, developers can efficiently create applications that leverage the power of generative AI.\\nHow do I get started with building a RAG application using Genkit and Astra DB?\\nTo build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB and then install Genkit and related dependencies into your Node.js application. Once you've configured Genkit with your Astra DB credentials, you can start creating flows.\\nWhat does building the RAG application involve?\\nBuilding the RAG application involves creating a collection in Astra DB to store vectors, and setting up flows in Genkit to ingest data, and to generate responses based on context retrieved from the database. You can test these flows out using the Genkit UI.\\nDataStax AI Platform:The Fastest Way to Build and Deploy AI AppsTry For Free\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\"Today we announced the release of a plugin for Firebase's Genkit framework for building generative AI applications. Genkit is a powerful framework that provides the primitives for building production-quality GenAI applications. From easy access to models, prompts, indexers, and retrievers, to more advanced features like flows, traces, and evals, its power lies in making it easy to do the right thing while building GenAI applications.\\nIn this post, we'll take a look at how to use the Astra DB plugin for Genkit to build a retrieval-augmented generation application with Genkit.Building a RAG application\\nLet's build a RAG application from scratch and see how straightforward it can be with Genkit and Astra DB. First, you'll need a Gemini API key, which you can get from Google AI Studio.\\nYou’ll also need an Astra DB database to store your data and vectors; if you don't already have an account you can sign up for a free DataStax account.\\nStart by creating a new Astra DB database; give it a name and choose a cloud and\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}},{\"content\":[{\"text\":\" creates vectors with 768 dimensions (though you can choose fewer), so enter 768 for the number of dimensions and choose \\\"Cosine\\\" for  the similarity metric.Once you've created the collection, you'll need the API endpoint of the database, the collection name and to generate an API token. With those, create a .env file in your application and enter the credentials:\\nAlso in the .env file, enter your API key from AI Studio too:Now we can configure Genkit. In index.ts create the ai object like so:\\nThis sets up Genkit with the Google AI plugin for models and embeddings and the Astra DB plugin, configured with the credentials to access the collection you just created and the vector embedding model text-embedding-004.\\nWe can now access the Astra DB indexer and retriever via the reference functions:The indexer is used to store documents in the collection and the retriever is used to perform vector search to return documents from the collection.\\nIngesting data\\nNow we can ingest some data into Astra DB. For this RAG application,\"}],\"metadata\":{\"url\":\"https://www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"}}],\"tools\":[],\"output\":{}}}","genkit:state":"success"},"displayName":"generate","links":[],"instrumentationLibrary":{"name":"genkit-tracer","version":"v1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}},"95d8b54396c17ecb":{"spanId":"95d8b54396c17ecb","traceId":"6fb64ed91bde5fc50562fce2b858a94d","startTime":1752354792733,"endTime":1752354795830.6372,"attributes":{"genkit:type":"action","genkit:metadata:subtype":"flow","genkit:name":"rag","genkit:isRoot":true,"genkit:path":"/{rag,t:flow}","genkit:metadata:context":"{}","genkit:input":"\"https: //www.datastax.com/blog/rag-powered-chat-bot-genkit-astra-db#ingesting-data-2\"","genkit:output":"\"To build a RAG application with Genkit and Astra DB, you need to create a database and collection within Astra DB. Then, install Genkit and related dependencies into your Node.js application. After configuring Genkit with your Astra DB credentials, you can start creating flows to ingest data and generate responses based on context retrieved from the database. Remember to obtain a Gemini API key from Google AI Studio.\\n\"","genkit:state":"success"},"displayName":"rag","links":[],"instrumentationLibrary":{"name":"genkit-tracer","version":"v1"},"spanKind":"INTERNAL","sameProcessAsParentSpan":{"value":true},"status":{"code":0},"timeEvents":{"timeEvent":[]}}},"displayName":"rag","startTime":1752354792733,"endTime":1752354795830.6372}